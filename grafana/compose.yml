networks:
  prometheus:

services:
  grafana:
    image: grafana/grafana-enterprise
    restart: unless-stopped
    user: ${PUID:?}
    profiles:
      - all 
      - internal
      - grafana
    environment:
      - TZ
      - PUID
      - PGID
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:?}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=grafana.${DOMAIN:?}
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-datasources:/etc/grafana/provisioning/datasources
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.entrypoints=https
      - traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN:?}`)
      - traefik.http.routers.grafana.tls=true
      - traefik.http.routers.grafana.tls.certresolver=sslresolver
      - flame.type=application
      - flame.name=grafana
      - flame.url=grafana.${DOMAIN:?}
      - flame.icon=skull-crossbones

  loki:
    image: grafana/loki:2.9.2
    restart: unless-stopped
    profiles:
      - all 
      - internal
      - grafana
    command: 
      - '--config.file=/etc/loki/config.yml'
    volumes:
      - loki-config:/etc/loki
    labels:
      - traefik.enable=true
      - traefik.http.routers.loki.entrypoints=https
      - traefik.http.routers.loki.rule=Host(`loki.${DOMAIN:?}`)
      - traefik.http.routers.loki.tls=true
      - traefik.http.routers.loki.tls.certresolver=sslresolver
      # - flame.type=application
      # - flame.name=loki
      # - flame.url=loki.${DOMAIN:?}
      # - flame.icon=wifi

  promtail:
    image: grafana/promtail:2.9.2
    command: 
      - '--config.file=/etc/promtail/config.yml'
    restart: unless-stopped
    profiles:
      - all 
      - internal
      - grafana
    volumes:
      - promtail-config:/etc/promtail
      - /var/log:/var/log
    labels:
      - traefik.enable=true
      - traefik.http.routers.promtail.entrypoints=https
      - traefik.http.routers.promtail.rule=Host(`promtail.${DOMAIN:?}`)
      - traefik.http.routers.promtail.tls=true
      - traefik.http.routers.promtail.tls.certresolver=sslresolver
      # - flame.type=application
      # - flame.name=promtail
      # - flame.url=promtail.${DOMAIN:?}
      # - flame.icon=wifi
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    restart: unless-stopped
    profiles:
      - all 
      - internal
      - grafana
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.cadvisor.entrypoints=https
      - traefik.http.routers.cadvisor.rule=Host(`cadvisor.${DOMAIN:?}`)
      - traefik.http.routers.cadvisor.tls=true
      - traefik.http.routers.cadvisor.tls.certresolver=sslresolver
      - flame.type=application
      - flame.name=cadvisor
      - flame.url=cadvisor.${DOMAIN:?}
      - flame.icon=skull-crossbones

  alertmanager:
    image: prom/alertmanager
    restart: unless-stopped
    profiles:
      - all 
      - internal
      - grafana
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    volumes:
      - alertmanager-config:/etc/alertmanager/
      - alertmanager-data:/alertmanager
  
  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    networks:
      - default
      - prometheus
    profiles:
      - all 
      - internal
      - grafana
    links:
      - cadvisor:cadvisor
    extra_hosts: 
      - "host.docker.internal:host-gateway"
    command:
      - '--config.file=/etc/prometheus/config.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
      - '--log.level=error'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.external-url=https://prometheus.${DOMAIN:?}'
      # - '--web.enable-admin-api'
      - '--web.enable-lifecycle'
    volumes:
      - prometheus-config:/etc/prometheus
      - prometheus-data:/prometheus
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.entrypoints=https
      - traefik.http.routers.prometheus.rule=Host(`prometheus.${DOMAIN:?}`)
      - traefik.http.routers.prometheus.tls=true
      - traefik.http.routers.prometheus.tls.certresolver=sslresolver
      - flame.type=application
      - flame.name=prometheus
      - flame.url=prometheus.${DOMAIN:?}
      - flame.icon=skull-crossbones

volumes:
  grafana-data:
  grafana-datasources:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACKS_DIR:?}/grafana/datasources
  promtail-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACKS_DIR:?}/grafana/promtail
  loki-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACKS_DIR:?}/grafana/loki
  prometheus-data:
  prometheus-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACKS_DIR:?}/grafana/prometheus
  alertmanager-data:
  alertmanager-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACKS_DIR:?}/grafana/alertmanager
